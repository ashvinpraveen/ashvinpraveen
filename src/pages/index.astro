---
import BaseHead from '../components/BaseHead.astro';
import CardLayout from '../components/CardLayout.astro';
import EnhancedTipTapEditor from '../components/EnhancedTipTapEditor.astro';
import ConvexProviderWrapper from '../components/ConvexProviderWrapper.tsx';
import GlobalEditToggle from '../components/GlobalEditToggle.astro';
export const prerender = false;

const user = await Astro.locals.currentUser();

// Check if user is admin (ashvin@cleve.ai)
const isAdmin = user?.primaryEmailAddress?.emailAddress === 'ashvin@cleve.ai';

// Default homepage content for ashvin@cleve.ai
const defaultHomeContent = `
<h1>Welcome</h1>
<p>This is your homepage. Edit this content to create whatever you'd like.</p>
`;
---

<!doctype html>
<html lang="en" data-theme="dark">
	<head>
		<BaseHead title="Ashvin Praveen" description="Personal homepage" isUserPage={false} />
	</head>
	<body data-is-owner={isAdmin} data-is-admin={isAdmin}>
		<CardLayout>
			<main>
				<!-- Clean TipTap Editor for Ashvin -->
				<EnhancedTipTapEditor
					id="homepage-editor"
					placeholder="Start writing..."
					content={defaultHomeContent}
					editable={false}
					showBubbleMenu={true}
					showContextMenu={true}
					showUploadModal={true}
					isOwner={isAdmin}
					slug="homepage"
					pageKey="homepage"
					class="homepage-editor"
				/>
			</main>
		</CardLayout>

		<!-- Global Edit Toggle (Only for Admin) -->
		{isAdmin && (
			<GlobalEditToggle isOwner={isAdmin} />
		)}

		<!-- Convex Provider for Real-time Syncing -->
		<ConvexProviderWrapper
			slug="homepage"
			editorId="homepage-editor"
			isOwner={isAdmin}
			pageKey="homepage"
			pageTitle="Homepage"
			client:load
		/>

		<style>
			/* Homepage Editor Styles */
			.homepage-editor {
				width: 100%;
				max-width: none;
				margin: 0;
				position: relative;
				overflow: visible;
			}

			/* Override main constraints for full-width editor */
			:global(.content-area) main {
				max-width: none !important;
				padding: 0rem !important;
				margin: 0 !important;
				width: 100% !important;
			}

			main {
				max-width: none !important;
				padding: 0rem !important;
				margin: 0 !important;
				width: 100% !important;
			}
		</style>

		<script is:inline>
			// Get page data from body attributes
			const isOwner = document.body.dataset.isOwner === 'true';
			const isAdmin = document.body.dataset.isAdmin === 'true';

			// Initialize edit mode integration for homepage editor
			document.addEventListener('DOMContentLoaded', function() {
				const homepageInstance = window[`homepage-editorEditor`];

				if (isAdmin) {
					// Admin gets edit mode functionality
					// Listen for global edit mode changes
					window.addEventListener('editModeChanged', function(e) {
						const editMode = e.detail.isEditMode;
						if (homepageInstance && homepageInstance.getEditor()) {
							homepageInstance.setEditable(editMode);
						}
					});

					// Set initial edit mode based on saved state
					const savedMode = localStorage.getItem('editMode') === 'true';
					if (savedMode) {
						window.dispatchEvent(new CustomEvent('editModeChanged', {
							detail: { isEditMode: true }
						}));
					}
				} else {
					// Visitors get read-only mode
					if (homepageInstance && homepageInstance.getEditor()) {
						homepageInstance.setEditable(false);
					}
				}
			});
		</script>
	</body>
</html>
