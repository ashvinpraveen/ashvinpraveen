---
import BaseHead from '../../components/BaseHead.astro';
import CardLayout from '../../components/CardLayout.astro';
import GlobalEditToggle from '../../components/GlobalEditToggle.astro';
export const prerender = false;

const { slug } = Astro.params;
const user = await Astro.locals.currentUser();

// For now, we'll check if the slug matches the current user
// In the future, this could query a database for public profiles
let isOwner = false;
if (user) {
  const userSlug = user.username || user.primaryEmailAddress?.emailAddress?.split('@')[0] || '';
  isOwner = userSlug.toLowerCase() === slug?.toLowerCase();
}

const pageTitle = `About ${slug}`;
const pageDescription = `Learn more about ${slug}`;
---

<!doctype html>
<html lang="en" data-theme="dark">
	<head>
		<BaseHead title={pageTitle} description={pageDescription} />
	</head>
	<body>
		<CardLayout>
			<main>
				<div class="editor-container">
					<div id="editor" class="tiptap-editor"></div>
				</div>
			</main>
		</CardLayout>
		<GlobalEditToggle isOwner={isOwner} />

		<style>
			main {
				max-width: none;
				padding: 2rem;
			}

			.editor-container {
				max-width: none;
				margin: 0;
			}

			.tiptap-editor {
				min-height: 500px;
				outline: none;
				color: hsl(0 0% 100% / 0.92);
				line-height: 1.6;
				text-align: left;
				border: 1px dashed hsl(0 0% 100% / 0.2);
				padding: 1rem;
				border-radius: 8px;
				transition: all 0.2s ease;
			}

			.tiptap-editor[contenteditable="true"] {
				border-color: hsl(120 100% 50% / 0.5);
				background: hsl(0 0% 100% / 0.02);
				box-shadow: 0 0 0 1px hsl(120 100% 50% / 0.2);
			}

			.tiptap-editor p {
				margin-bottom: 1rem;
			}

			.tiptap-editor h1,
			.tiptap-editor h2,
			.tiptap-editor h3 {
				color: hsl(0 0% 100% / 0.97);
				margin: 1.5rem 0 1rem 0;
				font-weight: 600;
			}

			.tiptap-editor h1 {
				font-size: 1.875rem;
			}

			.tiptap-editor h2 {
				font-size: 1.5rem;
			}

			.tiptap-editor h3 {
				font-size: 1.25rem;
			}

			.tiptap-editor ul,
			.tiptap-editor ol {
				padding-left: 1.5rem;
				margin-bottom: 1rem;
			}

			.tiptap-editor li {
				margin-bottom: 0.25rem;
			}

			.tiptap-editor blockquote {
				border-left: 3px solid hsl(0 0% 100% / 0.3);
				padding-left: 1rem;
				margin: 1rem 0;
				color: hsl(0 0% 100% / 0.8);
				font-style: italic;
			}

			.tiptap-editor code {
				background: hsl(0 0% 100% / 0.1);
				padding: 0.125rem 0.25rem;
				border-radius: 4px;
				font-family: 'JetBrains Mono', monospace;
				font-size: 0.875rem;
			}

			/* Placeholder styles */
			.tiptap-editor p.is-editor-empty:first-child::before {
				color: hsl(0 0% 100% / 0.4);
				content: attr(data-placeholder);
				float: left;
				height: 0;
				pointer-events: none;
			}
		</style>

		<script type="module" define:vars={{ isOwner, slug }}>
			import { Editor } from 'https://esm.sh/@tiptap/core@3.4.2'
			import StarterKit from 'https://esm.sh/@tiptap/starter-kit@3.4.2'
			import Placeholder from 'https://esm.sh/@tiptap/extension-placeholder@3.4.2'
			import Link from 'https://esm.sh/@tiptap/extension-link@3.4.2'

			let editor = null;
			let isEditMode = false;

			// Initialize editor when page loads
			document.addEventListener('DOMContentLoaded', function() {
				console.log('DOM loaded, initializing TipTap editor...');
				initializeEditor();

				// Listen for global edit mode changes
				window.addEventListener('editModeChanged', function(e) {
					console.log('Edit mode changed:', e.detail.isEditMode);
					console.log('isOwner:', isOwner);
					isEditMode = e.detail.isEditMode;
					if (editor) {
						const shouldBeEditable = isOwner && isEditMode;
						console.log('Setting editor editable:', shouldBeEditable);
						editor.setEditable(shouldBeEditable);
					} else {
						console.log('Editor not available yet');
					}
				});
			});

			function initializeEditor() {
				console.log('Initializing TipTap editor for about page...');
				console.log('isOwner:', isOwner, 'slug:', slug);
				try {
					editor = new Editor({
						element: document.querySelector('#editor'),
						extensions: [
							StarterKit,
							Placeholder.configure({
								placeholder: isOwner ? 'Start writing your about page...' : 'No about information yet.',
							}),
							Link.configure({
								openOnClick: false,
							}),
						],
						content: getInitialContent(),
						editable: false,
						editorProps: {
							attributes: {
								class: 'tiptap-editor',
							},
						},
					});

					console.log('TipTap editor initialized successfully');
					console.log('Initial content:', getInitialContent());

					// Set initial edit mode based on saved state
					const savedMode = localStorage.getItem('editMode') === 'true';
					if (savedMode && isOwner) {
						isEditMode = true;
						editor.setEditable(true);
						console.log('Edit mode enabled from saved state');
					}
				} catch (error) {
					console.error('Failed to initialize editor:', error);
					// Fallback: show template content directly
					const fallbackContent = getInitialContent();
					document.querySelector('#editor').innerHTML = fallbackContent;
				}
			}

			function getInitialContent() {
				// In a real app, this would load from a database
				if (isOwner) {
					return `
						<h1>About ${slug}</h1>
						<p>Welcome to my about page! Here are some ideas for what you can include:</p>
						<h2>Who am I?</h2>
						<p>Tell people about yourself, your background, and what you're passionate about.</p>
						<h2>What do I do?</h2>
						<p>Share your work, projects, or interests. You can use <strong>markdown formatting</strong> like:</p>
						<ul>
							<li><strong>Bold text</strong> for emphasis</li>
							<li><em>Italic text</em> for subtle emphasis</li>
							<li>Lists like this one</li>
							<li>Links to your <a href="https://example.com">favorite websites</a></li>
						</ul>
						<h2>How to reach me</h2>
						<p>Add your contact information or social media links here.</p>
						<blockquote>
							<p>ðŸ’¡ <em>Tip: You can delete this template and write whatever you want. Use the heading styles, lists, links, and formatting to make it your own!</em></p>
						</blockquote>
					`;
				} else {
					return '<p>No about information yet.</p>';
				}
			}

		</script>
	</body>
</html>