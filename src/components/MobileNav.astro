---
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const root = pathname.split('/').filter(Boolean)[0] || '';
const isActive = (href: string) => {
  if (href === '/') return pathname === '/';
  return ('/' + root) === href;
};
---

<nav class="mobile-nav" aria-label="Bottom navigation">
  <a href="/" class:list={[ 'item', { active: isActive('/') } ]}>
    <i data-lucide="home"></i>
    <span>Home</span>
  </a>
  <a href="/blog" class:list={[ 'item', { active: isActive('/blog') } ]}>
    <i data-lucide="file-text"></i>
    <span>Blog</span>
  </a>
  <a href="/about" class:list={[ 'item', { active: isActive('/about') } ]}>
    <i data-lucide="user"></i>
    <span>About</span>
  </a>
</nav>

<style>
  .mobile-nav {
    position: fixed;
    left: 50%;
    transform: translateX(-50%);
    bottom: calc(env(safe-area-inset-bottom, 0px) + 12px);
    width: calc(100% - 2rem);
    max-width: 520px;
    display: none;
    background: hsl(0 0% 0% / 0.45);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid var(--color-border-subtle);
    border-radius: 16px;
    box-shadow: 0 8px 30px hsl(0 0% 0% / 0.2), 0 4px 10px hsl(0 0% 0% / 0.12);
    padding: 0.25rem;
    z-index: 60;
  }
  .item {
    flex: 1 1 0;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    color: var(--typography-muted);
    text-decoration: none;
    padding: 0.5rem 0.25rem;
    font-size: 0.75rem;
  }
  .item span { line-height: 1; }
  .item i[data-lucide] {
    width: 20px;
    height: 20px;
  }
  .item.active { color: var(--typography-link-hover); }
  .item:hover { color: var(--typography-link); }

  @media (max-width: 720px) {
    .mobile-nav { display: flex; justify-content: space-around; }
  }
</style>

<script is:inline>
  // Initialize Lucide icons when DOM is ready
  function initializeMobileNav() {
    if (typeof lucide !== 'undefined') {
      lucide.createIcons();
    }
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeMobileNav);
  } else {
    initializeMobileNav();
  }
</script>

