---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname;
const subpath = pathname.match(/[^\/]+/g);

// Enhanced active state logic to handle both main site and user sub-pages
let isActive = false;

// Convert href to string for comparison
const hrefString = typeof href === 'string' ? href : '';

if (hrefString === pathname) {
  // Exact match for all pages (/, /about, /blog, /username, /username/about, etc.)
  isActive = true;
} else if (hrefString === '/blog' && pathname.startsWith('/blog/')) {
  // Main blog sub-pages (e.g., /blog/post-id)
  isActive = true;
} else if (hrefString !== '/blog' && hrefString.includes('/blog') && pathname.includes('/blog')) {
  // User blog pages (e.g., /username/blog)
  isActive = true;
} else if (hrefString !== '/about' && hrefString.includes('/about') && pathname.includes('/about')) {
  // User about pages (e.g., /username/about)
  isActive = true;
} else if (hrefString.includes('/settings') && pathname.includes('/settings')) {
  // Settings pages
  isActive = true;
}
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
a.active {
	/* No bold or underline on active; color handled by parent */
	font-weight: inherit;
	text-decoration: none;
}
</style>
