---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);

// Enhanced active state logic to handle user sub-pages
let isActive = false;

if (href === pathname) {
  // Exact match
  isActive = true;
} else if (href === '/' + (subpath?.[0] || '')) {
  // User root page match (e.g., /ashvin matches /ashvin/blog)
  isActive = pathname === href;
} else if (href?.includes('/blog') && pathname.includes('/blog')) {
  // Blog page matches
  isActive = true;
} else if (href?.includes('/about') && pathname.includes('/about')) {
  // About page matches
  isActive = true;
} else if (href?.includes('/dashboard') && pathname.includes('/dashboard')) {
  // Dashboard page matches
  isActive = true;
} else if (href === '/' && pathname === '/') {
  // Home page exact match
  isActive = true;
}
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
a.active {
	/* No bold or underline on active; color handled by parent */
	font-weight: inherit;
	text-decoration: none;
}
</style>
